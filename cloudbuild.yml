steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA',
        '.',
      ]

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA',
      ]

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}' # Name of your Cloud Run service
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed' # Or 'gke' if deploying to Cloud Run for Anthos
      - '--allow-unauthenticated' # Allows public access. Remove if you want to restrict access.
      # Add other flags as needed, e.g., --port, --set-env-vars
      # - '--port=8080' # If your app doesn't use 8080 or the Dockerfile EXPOSE port
      # - '--set-env-vars=NODE_ENV=production,DB_HOST=your-db-host'

images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

# Define substitution variables here or in the Trigger UI
# These are examples, adjust them as needed.
substitutions:
  _SERVICE_NAME: 'my-nestjs-service' # Your desired Cloud Run service name
  _REGION: 'us-central1' # Your GCP region
  _ARTIFACT_REPO_NAME: 'nestjs-apps' # Your Artifact Registry repository name
  # PROJECT_ID is automatically available

options:
  logging: CLOUD_LOGGING_ONLY
